@model DetailModel

@{
    ViewData["Title"] = Model.Tweet.Tweet;
}

<div class="max-w-xl mx-auto mt-10">
    <div class="bg-white p-4 rounded-lg shadow-md relative">
        @if (ViewBag.CanDeleteTweet)
        {
            <div class="absolute top-2 right-2 flex gap-2">
                <form action="/tweetsil/@Model.Tweet.Id" method="post"
                      onsubmit="return confirm('Tweet\'i silmek istediğinizden emin misiniz?');">
                    <button type="submit" class="btn btn-link" style="text-decoration: none; display: flex; align-items: center;">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-red-600">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                        </svg>
                    </button>
                </form>
                @* <form action="/TweetDuzenle/@Model.Tweet.Id" method="post">
                    <button type="submit" class="btn btn-link" style="text-decoration: none; display: flex; align-items: center;">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-blue-600">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125" />
                        </svg>
                    </button>
                </form> *@
            </div>
        }
        <div class="flex items-start">
            <a href="/profile/@Model.Tweet.Username">
                <img class="w-12 h-12 rounded-full" src="/uploads/@Model.Tweet.ImgPath" alt="Profile Photo">
            </a>
            <div class="ml-4 flex-1">
                <div class="flex items-center justify-between">
                    <a href="/profile/@Model.Tweet.Username">
                        <h2 class="font-bold text-lg">@Model.Tweet.Username</h2>
                    </a>
                </div>
                <p class="mt-2 text-gray-800">@Model.Tweet.Tweet</p>
                @if (!string.IsNullOrEmpty(Model.Tweet.TweetImg))
                {
                    <img class="mt-2 tweet-image cursor-pointer" src="/uploads/@Model.Tweet.TweetImg" alt="Tweet Media" onclick="openModal('/uploads/@Model.Tweet.TweetImg')">
                }
                <div class="text-gray-500 text-sm mt-2">@Model.Tweet.CreatedDate.ToString("ddd, dd MMM yyyy")</div>
                <div class="heart-container"></div>
            </div>
        </div>
    </div>
    <br />
    @if (string.IsNullOrEmpty(Context.Session.GetString("username")))
    {
        <div class="max-w-xl mx-auto mt-8 bg-white p-6 rounded-lg shadow-md">
            <h2 class="text-2xl font-semibold mb-4">Yorumlar</h2>
            <p>Yorumları görüntülemek için <a href="/Account/Login">giriş yap</a>manız gerekiyor.</p>
        </div>
    }
    else
    {
        @if (ViewBag.Yorum)
        {
            @Html.Partial("Partials/_Replies", Model)
        }
    }
</div>

<style>
    .tweet-image {
        width: 50%;
        max-width: 500px;
        height: auto;
        border-radius: 0.5rem;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    #imageModal img {
        max-width: 90vw;
        max-height: 90vh;
        border-radius: 0.5rem;
    }

    .absolute {
        position: absolute;
    }

    .top-2 {
        top: 0.5rem;
    }

    .right-2 {
        right: 0.5rem;
    }

    .gap-2 {
        gap: 0.5rem;
    }
</style>

<div id="imageModal" class="hidden fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center">
    <div class="bg-white p-4 rounded-lg">
        <span class="cursor-pointer" onclick="closeModal()">X</span>
        <img id="modalImage" src="" alt="Modal Image" class="mt-2">
    </div>
</div>

<script defer>
    function openModal(imageSrc) {
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        modalImage.src = imageSrc.replace('~', '');
        modal.classList.remove('hidden');
    }

    function closeModal() {
        const modal = document.getElementById('imageModal');
        modal.classList.add('hidden');
    }
</script>
